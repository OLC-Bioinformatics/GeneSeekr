#!/usr/bin/env python
from GeneSeekr.MLSTSeekr import GeneSeekr
__author__ = 'mike knowles'


def helper(genes, targets, out, cutoff, threads):
    from glob import glob
    from json import dump
    import time
    import os
    assert os.path.isdir(out), u'Output location is not a valid directory {0!r:s}'.format(out)
    assert os.path.exists(genes), u'rMLST fasta not valid {0!r:s}'.format(genes)
    assert isinstance(threads, int)
    ispath = (lambda x: glob(x + "/*.f*[sa]") if os.path.isdir(x) else [x])
    genes = ispath(genes)
    targets = ispath(targets)
    result = GeneSeekr(genes, targets, threads)
    result.mpblast(cutoff)
    dump(result.plus, open("%s/MLST-gene_results_%s.json" % (out, time.strftime("%Y.%m.%d.%H.%M.%S")), 'w'),
         sort_keys=True, indent=4, separators=(',', ': '))
    result.csvwriter(out, 'rMLST')


if __name__ == '__main__':
    from argparse import ArgumentParser
    from GeneSeekr.MLSTSeekr import parent
    parser = ArgumentParser(description='Multilocus Seqeunce Typing Assay with BLAST:\n'
                                        'Use to find markers for any bacterial genome',
                            parents=[parent])
    parser.set_defaults(cutoff=100)
    args = vars(parser.parse_args())
    helper(args['marker'], args['input'], args['output'], args['cutoff'], args['threads'])
